package GUI;

import ClasesRentaCar.Auto;
import ClasesRentaCar.Cliente;
import ClasesRentaCar.Rentar;
import Conexion.ClienteHilo;
import Conexion.ClienteSocket;
import static GUI.RentarGUI.PASS;
import static GUI.RentarGUI.URL;
import static GUI.RentarGUI.USERNAME;
import static GUI.RentarGUI.getConnection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;

/**
 * @author Jorge Hernandez Araya
 */
public class ReturnarGUI extends javax.swing.JPanel {

    static String URL = "jdbc:mysql://localhost:3306/rentacar";
    static String USERNAME = "root";
    static String PASS = "admin01";
    static String mensaje = null;

    public static Connection getConnection() {

        Connection conn = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = (Connection) DriverManager.getConnection(URL, USERNAME, PASS);

        } catch (Exception e) {
            System.out.println(e);
        }

        return conn;
    }

    public ReturnarGUI() {
        initComponents();
        presentarTableAuto();
    }

    public boolean camposVacios() {

        if ((txtId.equals("")) || (txtId.getText().equals("Ingrese el dato")) || (txtId.getText().equals(null))) {
            return true;
        } else {
            return false;
        }
    }

    private void presentarTableAuto() {
        DefaultTableModel modelo = (DefaultTableModel) TableRentados.getModel();
        TableRentados.setModel(modelo);
        Connection conn = getConnection();
        TableModel modeloDatos = TableRentados.getModel();

        try {
            String sql = "SELECT * FROM autos WHERE rentar = \"R\";";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ResultSetMetaData metaData = rs.getMetaData();

            // Names of columns
            Vector<String> columnNames = new Vector<String>();
            int columnCount = (metaData.getColumnCount()) - 1;

            columnNames.add("Placa");
            columnNames.add("Marca");
            columnNames.add("Modelo");
            columnNames.add("Cedula");
            columnNames.add("Nombre");
            columnNames.add("Apellido1");
            columnNames.add("Apellido2");
            columnNames.add("Correo");
            columnNames.add("Telefono");

            // Data of the table
            Vector<Vector<Object>> data = new Vector<Vector<Object>>();
            while (rs.next()) {
                Vector<Object> vector = new Vector<Object>();
                for (int i = 1; i <= columnCount; i++) {
                    vector.add(rs.getObject(i));
                }
                data.add(vector);
            }

            modelo.setDataVector(data, columnNames);
            //TableAuto.setEnabled(false);

        } catch (Exception e) {

        }
    }

    public void ventanasMsjs() {

        switch (mensaje) {

            case "correcto":
                JOptionPane.showMessageDialog(null, "Accion ejecutada de forma correcta.", "Info", 1);

                break;

            case "duplicado":
                JOptionPane.showMessageDialog(null, "El auto ya esta rentado.", "Error", 0);
                break;

            case "no existe":
                JOptionPane.showMessageDialog(null, "El dato ingresado no existe", "Info", 1);
                break;

            case "id vacio":
                JOptionPane.showMessageDialog(null, "El campo de id no puede estar vacio", "Campo vacio", 2);
                break;

            case "error base":
                JOptionPane.showMessageDialog(null, "Error al conectar la base de datos.", "Error", 1);
                break;
        }
    }
//distintos mensajes que envías el peor según la consulta

    public static void mensajes(String msg) {
        mensaje = msg;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        btmRetornar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableRentados = new javax.swing.JTable();
        btncancelar = new javax.swing.JButton();
        btmActualizar = new javax.swing.JButton();
        txt1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        Separator1 = new javax.swing.JSeparator();
        btmBuscar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        setMinimumSize(new java.awt.Dimension(750, 430));
        setPreferredSize(new java.awt.Dimension(750, 430));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        body.setBackground(new java.awt.Color(255, 255, 255));
        body.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(body, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 215, -1, -1));

        Title.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        Title.setForeground(new java.awt.Color(0, 0, 0));
        Title.setText("RETORNAR AUTO");
        add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        btmRetornar.setBackground(new java.awt.Color(18, 90, 173));
        btmRetornar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btmRetornar.setForeground(new java.awt.Color(255, 255, 255));
        btmRetornar.setText("RETORNAR");
        btmRetornar.setBorder(null);
        btmRetornar.setBorderPainted(false);
        btmRetornar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmRetornarActionPerformed(evt);
            }
        });
        add(btmRetornar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 380, 110, 30));

        TableRentados.setBackground(new java.awt.Color(204, 204, 204));
        TableRentados.setForeground(new java.awt.Color(0, 0, 0));
        TableRentados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Placa", "Marca", "Modelo", "Cedula", "Nombre", "Apellido1", "Apellido2", "Correo", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableRentados);
        if (TableRentados.getColumnModel().getColumnCount() > 0) {
            TableRentados.getColumnModel().getColumn(0).setResizable(false);
            TableRentados.getColumnModel().getColumn(2).setResizable(false);
            TableRentados.getColumnModel().getColumn(3).setResizable(false);
            TableRentados.getColumnModel().getColumn(4).setResizable(false);
            TableRentados.getColumnModel().getColumn(5).setResizable(false);
            TableRentados.getColumnModel().getColumn(6).setResizable(false);
            TableRentados.getColumnModel().getColumn(8).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 730, 150));

        btncancelar.setBackground(new java.awt.Color(255, 102, 102));
        btncancelar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btncancelar.setForeground(new java.awt.Color(255, 255, 255));
        btncancelar.setText("CANCELAR");
        btncancelar.setBorder(null);
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });
        add(btncancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 380, 110, 30));

        btmActualizar.setBackground(new java.awt.Color(18, 90, 173));
        btmActualizar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btmActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btmActualizar.setText("ACTUALIZAR");
        btmActualizar.setBorder(null);
        btmActualizar.setBorderPainted(false);
        btmActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmActualizarActionPerformed(evt);
            }
        });
        add(btmActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 110, 30));

        txt1.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        txt1.setForeground(new java.awt.Color(0, 0, 0));
        txt1.setText("Buscar por placa");
        add(txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        txtId.setBackground(new java.awt.Color(255, 255, 255));
        txtId.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        txtId.setForeground(new java.awt.Color(102, 102, 102));
        txtId.setText("Ingrese la placa");
        txtId.setBorder(null);
        txtId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIdMousePressed(evt);
            }
        });
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 260, 30));

        Separator1.setForeground(new java.awt.Color(0, 0, 0));
        Separator1.setPreferredSize(new java.awt.Dimension(200, 10));
        add(Separator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 260, -1));

        btmBuscar.setBackground(new java.awt.Color(18, 90, 173));
        btmBuscar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btmBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btmBuscar.setText("BUSCAR");
        btmBuscar.setBorder(null);
        btmBuscar.setBorderPainted(false);
        btmBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmBuscarActionPerformed(evt);
            }
        });
        add(btmBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, 110, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btmRetornarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmRetornarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btmRetornarActionPerformed

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        // TODO add your handling code here:
        txtId.setText("Ingrese el dato a buscar");
    }//GEN-LAST:event_btncancelarActionPerformed

    private void btmActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmActualizarActionPerformed
        // TODO add your handling code here:;
        try {

            presentarTableAuto();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btmActualizarActionPerformed

    private void txtIdMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdMousePressed
        // TODO add your handling code here:
        if ("Ingrese la identificacion".equals(txtId.getText())) {
            txtId.setText("");
        }
    }//GEN-LAST:event_txtIdMousePressed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btmBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmBuscarActionPerformed
        // TODO add your handling code here:
        try {

            if (camposVacios() == false) {

                Rentar rentar = new Rentar();

                rentar.setPlaca(rentar.getPlaca());
                ClienteHilo.objetoaJsonRENTAR(rentar);

                String task = "verRentados";

                rentar = (Rentar) ClienteSocket.clientToServer(task, rentar.getPlaca());
                rentar = ClienteHilo.archivoJsonAObjetoRENTAR();

                rentar = ClienteHilo.archivoJsonAObjetoRENTAR();///error null

                if ("correcto".equals(mensaje)) {

                    txtId.setText(rentar.getPlaca());
                    presentarTableAuto();
                    ventanasMsjs();

                } else {
                    txtId.setText("Ingrese el dato");
                    ventanasMsjs();
                }

            } else {
                JOptionPane.showMessageDialog(null, "El campo de busqueda esta en blanco.\n" + "Debe de seleccionar la placa del auto.", "Campos en Blanco", 1);
            }

        } catch (Exception e) {

        }

    }//GEN-LAST:event_btmBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator Separator1;
    private javax.swing.JTable TableRentados;
    private javax.swing.JLabel Title;
    private javax.swing.JPanel body;
    private javax.swing.JButton btmActualizar;
    private javax.swing.JButton btmBuscar;
    private javax.swing.JButton btmRetornar;
    private javax.swing.JButton btncancelar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel txt1;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
